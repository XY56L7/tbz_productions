import React from "react";

const Contact: React.FC = () => {
  // ---------- D√°tum kisz√°m√≠t√°sa (a k√∂vetkez≈ë nap) ----------
  const today = new Date();
  const expectedDate = new Date(today);
  expectedDate.setDate(expectedDate.getDate() + 1);
  const formattedExpectedDate = expectedDate.toLocaleDateString("hu-HU", {
    year: "numeric",
    month: "long",
    day: "numeric",
    weekday: "long",
  });

  // ---------- Styles ----------

  // Outer wrapper: fekete h√°tt√©r, padding
  const outerWrapperStyle: React.CSSProperties = {
    backgroundColor: "#000",
    padding: "60px 20px",
    color: "#fff",
  };

  // Main container: k√∂z√©pre igaz√≠tott tartalom, egym√°s alatti elrendez√©s
  const mainContainerStyle: React.CSSProperties = {
    maxWidth: "1200px",
    margin: "0 auto",
    display: "flex",
    flexDirection: "column",
    gap: "40px",
  };

  // Bal oldali container (el√©rhet≈ës√©gi k√°rty√°k)
  const leftContainerStyle: React.CSSProperties = {
    display: "flex",
    flexDirection: "column",
    gap: "24px",
  };

  const leftHeadingStyle: React.CSSProperties = {
    fontSize: "1.8rem",
    fontWeight: 600,
    margin: 0,
  };

  const leftParagraphStyle: React.CSSProperties = {
    fontSize: "1rem",
    lineHeight: 1.6,
    margin: 0,
    color: "#ccc",
  };

  // Container a k√°rty√°khoz
  const contactCardsWrapperStyle: React.CSSProperties = {
    display: "flex",
    flexDirection: "row",
    gap: "20px",
    flexWrap: "wrap",
  };

  // Egyetlen k√°rtya st√≠lusa
  const cardStyle: React.CSSProperties = {
    backgroundColor: "#111",
    borderRadius: "12px",
    padding: "20px",
    flex: "1 0 220px",
    display: "flex",
    flexDirection: "column",
    gap: "8px",
    boxShadow: "0 2px 8px rgba(0,0,0,0.2)",
  };

  // K√°rtya c√≠m: feh√©r sz√≠n≈±
  const cardTitleStyle: React.CSSProperties = {
    fontSize: "1rem",
    fontWeight: 500,
    margin: 0,
    color: "#fff",
  };

  // K√°rtya alc√≠m: sz√ºrk√©s
  const cardSubtitleStyle: React.CSSProperties = {
    fontSize: "0.95rem",
    color: "#bbb",
    margin: 0,
  };

  const cardIconWrapperStyle: React.CSSProperties = {
    width: "48px",
    height: "48px",
    borderRadius: "50%",
    backgroundColor: "#333",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    marginBottom: "8px",
  };

  // Jobb oldali container (≈±rlap)
  const rightContainerStyle: React.CSSProperties = {
    backgroundColor: "#111",
    borderRadius: "12px",
    padding: "24px",
    boxShadow: "0 2px 8px rgba(0,0,0,0.2)",
    display: "flex",
    flexDirection: "column",
    gap: "20px",
  };

  const rightHeadingStyle: React.CSSProperties = {
    fontSize: "1.4rem",
    fontWeight: 600,
    margin: 0,
  };

  // Az ≈±rlap f≈ë sz√∂vege, a c√≠m alatti r√©sz
  const rightParagraphStyle: React.CSSProperties = {
    fontSize: "0.9rem",
    color: "#bbb",
    margin: 0,
  };

  // K√∂telez≈ë mez≈ëk figyelmeztet√©se
  const requiredNoteStyle: React.CSSProperties = {
    fontSize: "0.85rem",
    color: "#bbb",
    fontStyle: "italic",
  };

  const formGroupStyle: React.CSSProperties = {
    display: "flex",
    flexDirection: "column",
    gap: "6px",
    marginBottom: "12px",
  };

  const labelStyle: React.CSSProperties = {
    fontSize: "0.95rem",
    fontWeight: 500,
  };

  const inputStyle: React.CSSProperties = {
    padding: "12px",
    borderRadius: "6px",
    border: "1px solid #333",
    backgroundColor: "#222",
    color: "#fff",
    fontSize: "0.95rem",
  };

  const textareaStyle: React.CSSProperties = {
    ...inputStyle,
    height: "80px",
    resize: "vertical",
  };

  // Checkbox csoport st√≠lusa
  const checkboxGroupStyle: React.CSSProperties = {
    display: "flex",
    flexDirection: "column",
    gap: "12px",
  };

  const checkboxLabelStyle: React.CSSProperties = {
    display: "flex",
    alignItems: "center",
    gap: "12px",
    fontSize: "0.95rem",
    cursor: "pointer",
  };

  // "Elk√ºld√©s" gomb st√≠lusa (alap: feh√©r h√°tt√©r, fekete sz√∂veg)
  const submitButtonStyle: React.CSSProperties = {
    padding: "14px 20px",
    backgroundColor: "#fff",
    color: "#000",
    borderRadius: "30px",
    border: "none",
    cursor: "pointer",
    fontSize: "1rem",
    fontWeight: 500,
    marginTop: "8px",
    transition: "background-color 0.3s ease, color 0.3s ease",
  };

  // Bottom note st√≠lusa, ahol a d√°tum z√∂ld (#00D28C)
  const bottomNoteStyle: React.CSSProperties = {
    fontSize: "0.85rem",
    color: "#aaa",
    textAlign: "right",
    marginTop: "20px",
    borderTop: "1px solid #333",
    paddingTop: "10px",
    fontStyle: "italic",
  };

  const dateStyle: React.CSSProperties = {
    color: "#00D28C",
  };

  return (
    <section style={outerWrapperStyle} id="contact">
      <div style={mainContainerStyle} className="contact-main-container">
        {/* Bal oldali r√©sz: El√©rhet≈ës√©gi k√°rty√°k */}
        <div style={leftContainerStyle}>
          <h2 style={leftHeadingStyle}>Kapcsolatfelv√©tel</h2>
          <p style={leftParagraphStyle}>
            K√©szen √°llsz a n√∂veked√©sre? Besz√©lj vel√ºnk, hogy egy√ºtt emelj√ºk √∫j szintre a m√°rk√°dat!
          </p>
          <div style={contactCardsWrapperStyle}>
            {/* E-mail k√°rtya */}
            <div style={cardStyle}>
              <div style={cardIconWrapperStyle}>
                <span role="img" aria-label="Mail" style={{ fontSize: "1.2rem" }}>
                  ‚úâÔ∏è
                </span>
              </div>
              <h4 style={cardTitleStyle}>E-mail c√≠m</h4>
              <p style={cardSubtitleStyle}>info@tbzproductions.com</p>
            </div>
            {/* Telefon k√°rtya */}
            <div style={cardStyle}>
              <div style={cardIconWrapperStyle}>
                <span role="img" aria-label="Phone" style={{ fontSize: "1.2rem" }}>
                  üìû
                </span>
              </div>
              <h4 style={cardTitleStyle}>Telefonsz√°m</h4>
              <p style={cardSubtitleStyle}>+36 70 622 2157</p>
            </div>
          </div>
        </div>
        {/* Jobb oldali r√©sz: √Åraj√°nlat k√©relem ≈±rlap */}
        <div style={rightContainerStyle}>
          <h3 style={rightHeadingStyle}>√Åraj√°nlat k√©relem</h3>
          <p style={rightParagraphStyle}>
            Dolgozzunk egy√ºtt √©s emelj√ºk √∫j szintre az online jelenl√©ted! Vedd fel vel√ºnk a kapcsolatot √©s k√©rj egyedi aj√°nlatot.
          </p>
          <p style={requiredNoteStyle}>
            *-gal jel√∂lt mez≈ëk kit√∂lt√©se k√∂telez≈ë!
          </p>
          {/* ≈∞rlap mez≈ëk */}
          <div style={formGroupStyle}>
            <label style={labelStyle} htmlFor="fullName">
              Teljes n√©v *
            </label>
            <input
              id="fullName"
              type="text"
              style={inputStyle}
              placeholder="Teljes n√©v"
              onFocus={(e) => (e.currentTarget.placeholder = "")}
              onBlur={(e) => (e.currentTarget.placeholder = "Teljes n√©v")}
            />
          </div>
          <div style={formGroupStyle}>
            <label style={labelStyle} htmlFor="email">
              E-mail c√≠m *
            </label>
            <input
              id="email"
              type="email"
              style={inputStyle}
              placeholder="E-mail c√≠m"
              onFocus={(e) => (e.currentTarget.placeholder = "")}
              onBlur={(e) => (e.currentTarget.placeholder = "E-mail c√≠m")}
            />
          </div>
          <div style={formGroupStyle}>
            <label style={labelStyle} htmlFor="phone">
              Telefonsz√°m *
            </label>
            <input
              id="phone"
              type="tel"
              style={inputStyle}
              placeholder="Telefonsz√°m"
              onFocus={(e) => (e.currentTarget.placeholder = "")}
              onBlur={(e) => (e.currentTarget.placeholder = "Telefonsz√°m")}
            />
          </div>
          <div style={formGroupStyle}>
            <label style={labelStyle} htmlFor="projectDiscussion">
              Besz√©lgess√ºnk a projektedr≈ël *
            </label>
            <textarea
              id="projectDiscussion"
              style={textareaStyle}
              placeholder="Besz√©lgess√ºnk a projektedr≈ël"
              onFocus={(e) => (e.currentTarget.placeholder = "")}
              onBlur={(e) =>
                (e.currentTarget.placeholder = "Besz√©lgess√ºnk a projektedr≈ël")
              }
            />
          </div>
          <div style={formGroupStyle}>
            <label style={labelStyle}>
              Milyen szolg√°ltat√°sok √©rdekelnek? (Egyszerre t√∂bb lehet≈ës√©g is kiv√°laszthat√≥) *
            </label>
            <div style={checkboxGroupStyle}>
              <label style={checkboxLabelStyle}>
                <input type="checkbox" className="custom-checkbox" />
                Teljesk√∂r≈± tartalomgy√°rt√°s
              </label>
              <label style={checkboxLabelStyle}>
                <input type="checkbox" className="custom-checkbox" />
                Rekl√°m √©s Image vide√≥k k√©sz√≠t√©se
              </label>
              <label style={checkboxLabelStyle}>
                <input type="checkbox" className="custom-checkbox" />
                Fot√≥z√°s
              </label>
              <label style={checkboxLabelStyle}>
                <input type="checkbox" className="custom-checkbox" />
                Social media management
              </label>
              <label style={checkboxLabelStyle}>
                <input type="checkbox" className="custom-checkbox" />
                Weboldal tervez√©s √©s fejleszt√©s
              </label>
            </div>
          </div>
          {/* Submit gomb, hover hat√°ssal */}
          <button
            style={submitButtonStyle}
            onMouseEnter={(e) => {
              e.currentTarget.style.backgroundColor = "#00D28C";
              e.currentTarget.style.color = "#fff";
            }}
            onMouseLeave={(e) => {
              e.currentTarget.style.backgroundColor = "#fff";
              e.currentTarget.style.color = "#000";
            }}
          >
            Elk√ºld√©s
          </button>
          {/* Als√≥ jegyzet: √Åraj√°nlat v√°rhat√≥ √©rkez√©se, d√°tum z√∂ld sz√≠nnel */}
          <p style={bottomNoteStyle}>
            √Åraj√°nlat v√°rhat√≥ √©rkez√©se:{" "}
            <span style={dateStyle}>{formattedExpectedDate}</span>
          </p>
        </div>
      </div>
      <style>
        {`
          /* Egyedi checkbox st√≠lusok */
          .custom-checkbox {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            width: 20px;
            height: 20px;
            border: 2px solid #ccc;
            border-radius: 4px;
            position: relative;
            cursor: pointer;
            outline: none;
            transition: all 0.2s ease;
            flex-shrink: 0;
          }
          .custom-checkbox:checked {
            background-color: #00D28C;
            border-color: #00D28C;
          }
          .custom-checkbox:checked::after {
            content: "";
            position: absolute;
            left: 6px;
            top: 2px;
            width: 5px;
            height: 10px;
            border: solid #fff;
            border-width: 0 2px 2px 0;
            transform: rotate(45deg);
          }
          /* Mobil n√©zet: egym√°s alatti elrendez√©s */
          @media (max-width: 768px) {
            .contact-main-container {
              flex-direction: column;
            }
          }
        `}
      </style>
    </section>
  );
};

export default Contact;
